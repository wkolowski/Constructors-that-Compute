data Elem {A : Type} (x : A) : List A -> Type
| z : (l : List A) -> Elem x (x :: l)
| s : (h : A) {t : List A} (e : Elem x t) -> Elem x (h :: t)

data Elem (x : A) : List A -> Type
| []     => False
| h :: t => x = h + Elem x t