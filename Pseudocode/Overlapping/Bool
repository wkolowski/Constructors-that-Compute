data Bool : Type :=
| ff : Bool
| tt : Bool

notb : Bool -> Bool :=
| ff => tt
| tt => ff

orb : (x y : Bool) -> Bool :=
| ff y  => y
| x  ff => x
| tt _  => tt
| _  tt => tt

andb : (x y : Bool) -> Bool :=
| ff _  => ff
| _  ff => ff
| tt y  => y
| x  tt => x

// Stats: compared to ordinary pattern matching, we get for free: 2 theorems
// about neutral elements, 2 theorems about annihilatig elements, etc.

eqb : (x y : Bool) : Bool :=
| tt tt => tt
| ff ff => tt
| _  _  => ff