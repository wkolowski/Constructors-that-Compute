// Encoding of a sum using a record.
codata Sum (A B : Type) : Type
& b of Bool
& snd of if b then A else B

// Computation in types of record fields.
codata Sum (A B : Type) : Type
& b of Bool
& snd with b
  | tt => A
  | ff => B

inl #(A B : Type) (a : A) : Sum A B
& b   => tt
& snd => a

inr #(A B : Type) (b : B) : Sum A B
& b   => ff
& snd => b

// Separate section for parameters.
data Sum
  parameters
  & A : Type
  & B : Type
  sort Type
  constructors
  | inl of A
  | inr of B

// Ordinary.
data Sum (A B : Type) : Type
| inl of A
| inr of B

data Vec
  parameters
  & A : Type
  indices
  & len : Nat
  sort Type
  constructors
  | Nil  : Vec 0
  | Cons : (hd : A, #n : Nat, tl : Vec n) -> Vec (s n)