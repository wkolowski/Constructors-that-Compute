// What is going on here?
data Path {A : I -> Type} : A i0 -> A i1 -> Type :=
 | path (x : A i0) (y : A i1) (i : I) :=
    | i0 => x
    | i1 => y

data SetTrunc (A : Type) : Type :=
  | in (a : A)
//| isSet_UIP : {x y : A} (p q : x = y) -> p = q
//| isSet_K   : (x : A) (p : x = x) :=
//  | isSet_K x p => isSet_K x refl
  | isSet_UIP {x y : A} (p q : x = y) : (i j : I) -> SetTrunc A :=
    | i0 => p
    | i1 => q
//| isSet_K {x : A} 
